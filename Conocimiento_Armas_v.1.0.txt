; ======================================================================================================
;  '||   ||` '||`   ||                                 /.\      '||`
;   ||   ||   ||    ||     ''                         // \\      ||   ''
;   ||   ||   ||  ''||''   ||  '||),,(|,   '''|.     //...\\     ||   ||   '''|.  `||''|,  '''/  '''|.
;   ||   ||   ||    ||     ||   || || ||  .|''||    //     \\    ||   ||  .|''||   ||  ||   //  .|''||
;   `|...|'  .||.   `|..' .||. .||    ||. `|..||. .//       \\. .||. .||. `|..||. .||  ||. /... `|..||.
; =====================================================================================================
;
; Author: Sthil Lauda
; Version: 1.0
; Client Tested with: 2.0.3
; EUO version tested with: EasyUO 1.5 Version 243
; Shard: Ultima Alianza (¡Hasta la muerte!)
; Public Release: 05/08/2019
; Revised On: 05/08/2019
; Purpose: Entrena conocimiento de armas.
; Instrucciones: Llevar comida encima y hacer click en el arma.
;
; =============================================================
set %tiempo_alimentacion 360
set %tiempo_actual #SCNT
set %proxima_vez_comer #SCNT
set %comida RGG_NRD_QSD_ZBG_WLI_QRD_END_FUD_YLI_WLI_HGI
 +_KGI_EGI_QLI_KLI_MLI_KRD_HQD_AQD_MQE_VQE_TQE_JQE_IQE
 +_GQE_SPE_ZPE_OQE_BDF_KPE_RQE_YSD_SQD_AXI_PQD_QQD

gosub setupWeapon

;========================================================
;
; ******************* LOOP PRINCIPAL ********************
;
;========================================================
inicio:
gosub checkSkill
gosub checkHungry
event macro 13 4 ; Use skill "Arms Lore".
target
set #LTARGETID %weapon
set #LTARGETKIND 1
set %jstart #jindex
event macro 22
gosub wait_for MSG No_consigues Este_objeto 50
if ( #TRUE in #RESULT )
     {
       goto inicio
     }
goto inicio
;========================================================
;
; ***************** FIN LOOP PRINCIPAL ******************
;
;========================================================


sub checkSkill ;<===========================>
chooseskill Arms real ; Comprobar GM
if #SKILL >= 1000
   {
     set #SYSMSGCOL 19
     event sysmessage ¡Somos GM Arms Lore! :)
     halt
   }
return

sub setupWeapon ; <=======================>
display OK Haz CLICK en el ARMA a analizar.
set #TARGCURS 1
target
while #TARGCURS = 1
      {
        wait 1
      }
set %weapon #LTARGETID ; La ID del arma para analizar
set #SYSMSGCOL 73
event sysmessage ID Arma: %weapon
wait 20
set #LOBJECTID %weapon
event macro 17
return

sub checkHungry ; <=======================>
set %tiempo_actual #SCNT
if ( %proxima_vez_comer <= %tiempo_actual )
     {
       gosub comprobarcomida
     }
return

;=====================================================
; Rutina para, en caso de hambre, comer hasta saciarse
;=====================================================
; v2.2
sub comprobar_comida
{
  hambriento:
  set %jrnl #jindex ; Marcamos un índice de las líneas del diario.
  event macro 4 0 .hungry
  wait 20
  while #true
     {
       if #jindex > %jrnl ; Si aparece una nueva línea.
          {
            set %jrnl %jrnl + 1  ; Seleccionamos ese numero de línea.
            scanjournal %jrnl   ; La leemos...
            if Dentro_de_1_minuto in #journal
               {
                 wait 140s ; Save del server...
               }
            if Estas_no_le_afecta_el_hambre in #journal || Estas_tan_lleno_que_no_puedes in #journal || Estas_totalmente_saciado in #journal
               {
                 set %proxima_vez_comer %tiempo_actual + %tiempo_alimentacion
                 return
               }
               else
                  {
                    if Estas_lleno in #journal || Estas_contento in #journal || Estas_en_inanicion in #journal || Estas_hambriento in #journal || Sientes_mucho in #journal || Estas_con_hambre in #journal || Estas_parcialmente in #journal || Estas_bien_lleno in #journal || Te_sientes_casi_lleno in #journal
                       {
                         comer:
                         finditem %comida C_ , #backpackid
                         if #findcnt > 0
                            {
                              set #lobjectid #findid
                              event macro 17
                              wait 20
                              goto hambriento
                            }
                            else ; No hay comida en la mochila...
                               {
                                 finditem %comida C_ , %cofre
                                 if #findcnt > 0
                                    {
                                      exevent drag #findid 1
                                      exevent dropc #BACKPACKID
                                      wait 30
                                      goto comer
                                    }
                                    else ; Y tampoco en el cofre...
                                       {
                                         event exmsg #CHARID 3 48 COMPRA COMIDA!! :-(
                                         wait 40
                                         set %proxima_vez_comer %tiempo_actual + %tiempo_alimentacion
                                         return
                                       }
                               }
                       }
                       else ; Mensaje extraño, repetimos...
                          {
                            goto hambriento
                          }
                  }
          }
       return
     } ; FIN While
}
return

;=================================================================
sub wait_for
;=================================================================
; This "wait_for" sub package was created by Locke. If you use these subs please keep this header intact.
; Documentation: the sub package grew to large with all the comments. To load them call the sub like this:
; gosub wait_for docs    | or you can use doc, documention, what, or my personal favorite, kickass.

; "wait_for core dispatcher" version 1.2 by Locke
if %1 = doc || if %1 = docs || if %1 = documentation || if %1 = what || if %1 = kickass
{
Display ok Please click ok and wait for your browser to start.
execute http://www.easyuo.com/forum/viewtopic.php?t=24716
halt
}
nameSpace Push
namespace local LLNS
set #result N/A ; if #result isn't set by one of my wait_for subs it'll throw an error.
set !LPC #lpc
set #lpc 200
for %i 0 %0
set !_A . %i % . %i
gosub wait_for_ , !_A1
set #lpc !lpc
namespace clear LLNS
namespace pop
if #result <> N/A
return #result
else
display ok You specified an unknown wait_for command. Script returned #result and is halting.
halt
;=================================================================
sub wait_for_MSG ; version 1.4 ~Locke
;=================================================================
if !_A0 < 3
{
display ok You haven't specified enough vars.$
+The basic format is: gosub wait_for MSG %message time_out_in_seconds$
+Script is halting
halt
}
set !_timeout ( #scnt2 + !_A . !_A0 )
_lets_wait_for_a_message:
for %i %jstart #jindex
{
 scanjournal %i
  for %ii 2 !_A0
  {
    if !_A . %ii in #journal && %jstart <> %i
    set #result #true , #spc , !_A . %ii
  }
}

if #true notin #result
{
set #result #false
 if !_timeout =< #scnt2
 return #result
wait 1
goto _lets_wait_for_a_message
}
else
return #result

wait 1
goto _lets_wait_for_a_message
