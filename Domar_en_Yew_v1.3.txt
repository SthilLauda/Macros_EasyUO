; *** NOTAS "MÁGICAS" ^^ *** :
; - Si la macro de domarse os para en un determinado sitio y el pj no se mueve, pausad la macro,
;   abrid una nueva pestaña en el EasyUO, y poned lo siguiente: set *posicion 0
;   Le dais al play una vez, y otra al stop. Una vez hecho esto, volver a encender la macro de domar.
;
set %tiempo_alimentacion 360 ; Cada cuántos segundos va a comprobar si tiene hambre (5 minutos).
set %tiempo_actual #SCNT ; Reloj
set %proxima_vez #SCNT ; Trigger
set %comida RGG_NRD_QSD_ZBG_WLI_QRD_END_FUD_YLI_WLI_HGI
     +_KGI_EGI_QLI_KLI_MLI_KRD_HQD_AQD_MQE_VQE_TQE_JQE_IQE
     +_GQE_SPE_ZPE_OQE_BDF_KPE_RQE_YSD_SQD_YWI_AXI_PQD_QQD
;
; ********* MACRO *********
;
event SysMessage TammingGenius by Nilaween [ MOD+ Sthil ]
event SysMessage Intentando acudir a la ultima posicion. Por favor, ayudame a llegar.
chooseskill Anim real
ignoreitem *bloqueados
gosub comprobar_comida
gosub choose_pace run ; Lo primero, cambiar el modo de moverse a "correr".
goto movimiento

INICIO:
set *posicion *posicion + 1

nuevotarget:
set %fail 0
set %intentos 3
set %distancia 19
set #LTARGETID #CHARID
finditem * G_25
for #FINDINDEX 1 #FINDCNT
{
if #FINDREP <> 3 2
ignoreitem #FINDID
set *bloqueados *bloqueados , _ , #FINDID
if #FINDREP = 3 && #FINDID notIn %recientameados && #FINDDIST < %distancia && #FINDX < 755 2
set #LTARGETID #FINDID
set %distancia #FINDDIST
}
if #LTARGETID = #CHARID
goto movimiento
event PROPERTY #LTARGETID
if ( OSO in #PROPERTY && #SKILL < 601 ) || SERPIENTE in #PROPERTY || HORRENDO in #PROPERTY 2
set %recientameados %recientameados , _ , #LTARGETID
goto nuevotarget
set #LTARGETKIND 1
finditem #LTARGETID

repitiendotarget:
event macro 13 35
target
event macro 22 0
set %tiempoespera #SYSTIME + 16000
set %jEnd #JINDEX

escaneando:
repeat
if %tiempoespera < #SYSTIME
goto repitiendotarget
gosub seguir
until %jEnd <> #JINDEX
set %jStart %jEnd + 1
set %jEnd #JINDEX
for %i %jStart %jEnd
{
scanjournal %i
if TE_ACEPTA in #JOURNAL || TU_HABILIDAD_EN_LA_DOMA_NO_ES in #JOURNAL || %fail > 5 3
msg all release$
set %recientameados %recientameados , _ , #LTARGETID
goto nuevotarget
if YA_ESTA in #JOURNAL || NO_PUEDE_SER in #JOURNAL || NO_PUEDES_DOMAR in #JOURNAL || GET_THERE in #JOURNAL || %intentos <= 0 3
set *bloqueados *bloqueados , _ , #LTARGETID
ignoreitem #LTARGETID
goto nuevotarget
if NO_PUEDES_VER in #JOURNAL || SEE_THE_TARGET in #JOURNAL || UNEXPECTED_TARGET in #JOURNAL || FUERA_DE_TU in #JOURNAL 3
set %fail %fail + 1
gosub seguir
goto repitiendotarget
if ESTAS_DEMASIADO_LEJOS in #JOURNAL 3
gosub seguir
wait 10
goto repitiendotarget
if NO_CONSIGUES_DOMAR_EL in #JOURNAL 2
set %intentos %intentos + 1
goto repitiendotarget
}
goto escaneando

;=====================================================
; Rutina para, en caso de hambre, comer hasta saciarse
;=====================================================
; v2.2
sub comprobar_comida
{
  hambriento:
  set %jrnl #jindex ; Marcamos un índice de las líneas del diario.
  event macro 4 0 .hungry
  wait 20
  while #true
     {
       if #jindex > %jrnl ; Si aparece una nueva línea.
          {
            set %jrnl %jrnl + 1  ; Seleccionamos ese numero de línea.
            scanjournal %jrnl   ; La leemos...
            if Dentro_de_1_minuto in #journal
               {
                 wait 120s ; Save del server...
               }
            if Estas_no_le_afecta_el_hambre in #journal || Estas_tan_lleno_que_no_puedes in #journal || Estas_totalmente_saciado in #journal
               {
                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                 return
               }
               else
                  {
                    if Estas_lleno in #journal || Estas_contento in #journal || Estas_en_inanicion in #journal || Estas_hambriento in #journal || Sientes_mucho in #journal || Estas_con_hambre in #journal || Estas_parcialmente in #journal || Estas_bien_lleno in #journal || Te_sientes_casi_lleno in #journal
                       {
                         finditem %comida C_ , #backpackid
                         if #findcnt > 0
                            {
                              set #lobjectid #findid
                              event macro 17
                              wait 20
                              goto hambriento
                            }
                            else
                               {
                                 event exmsg #charid 3 48 COMPRA COMIDA!!
                                 wait 40
                                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                               }
                       }
                       else ; Mensaje extraño, repetimos...
                          {
                            goto hambriento
                          }
                  }
          }
       return
     } ; FIN While
}
return

sub seguir
if %tiempopathfind > #SYSTIME && %tiempopathfind <> N/A
return
set %tiempopathfind #SYSTIME + 2000
finditem #LTARGETID
if #FINDKIND <> -1 && #FINDDIST > 4
event pathfind #FINDX #FINDY #FINDZ
return

MOVIMIENTO:
; Comer cada cierto tiempo si hay hambre
set %tiempo_actual #SCNT
if %proxima_vez <= %tiempo_actual
   {
     gosub comprobar_comida
   }
set %nuevaronda 1
goto *posicion
0:
move 636 866
set * . #TIME #TIME
goto INICIO
1:
move 646 915
goto INICIO
2:
move 568 919
goto INICIO
3:
move 547 875
goto INICIO
4:
move 510 838
goto INICIO
5:
move 450 860
goto INICIO
6:
move 439 894
goto INICIO
7:
move 366 957
goto INICIO
8:
move 306 1000
goto INICIO
9:
move 343 1030
goto INICIO
10:
move 408 1024
goto INICIO
11:
move 491 963
goto INICIO
12:
move 536 984
goto INICIO
13:
move 514 1065
goto INICIO
14:
move 484 1102
goto INICIO
15:
move 506 1153
goto INICIO
16:
move 538 1130
goto INICIO
17:
move 552 1065
goto INICIO
18:
move 576 1037
goto INICIO
19:
move 615 1017
goto INICIO
20:
move 636 963
goto INICIO
21:
move 602 934
goto INICIO
22:
move 682 907
move 721 925
set *posicion -1
deletevar recientameados
goto INICIO

;-@ ============================== @-;
;-@ ############################## @-;
;-@ SUBS públicos del Foro EasyUO  @-;
;-@ ############################## @-;
;-@ ============================== @-;
;
;==================================
; Script Name: Peragrins' Pace choosing sub
; Author: Peragrin
; Version: v1.1
; Client Tested with: 4.0.10b
; EUO version tested with: 1.42.00A5
; Shard OSI / FS: OSI
; Revision Date: 05/06/05
; Public Release: 22/09/04
; Purpose: callable subroutine to pick whether always run is on or off
; Revisions: v1.1 now uses Namespace and better journal scanning
;============================================
sub choose_pace
;%0 - 1
;%1 - WALK/RUN
if %0 <> 1 || %1 notin WALK_RUN
        {
        display OK Incorrect arguments passed to ChoosePace subroutine, script halted.
        halt
        }
namespace push
namespace LOCAL ChoosePace
set !desired_pace %1
_TOGGLE_PACE:
set !jindex #jindex + 1
event macro 32 0
_CHOOSE_PACE_JOURNAL_SCAN:
gosub ScanJournal ALWAYS_RUN !jindex 1
if #result
        {
           if ON in #journal && !desired_pace = WALK
                goto _toggle_pace
           if OFF in #journal && !desired_pace = RUN
                goto _toggle_pace
        }
if ! #result
        {
        set !error !error + 1
        if !error > 5
                {
                   set !error 0
                   goto _toggle_pace
                }
        goto _choose_pace_journal_scan
        }
return
;==================================
; Script Name: Peragrins' journal scanning sub
; Author: Peragrin
; Version: v1.0
; Client Tested with: 4.0.10b
; EUO version tested with: 1.42.00A5
; Shard OSI / FS: OSI
; Revision Date: 05/06/05
; Public Release: 22/09/04
; Purpose: callable subroutine to scan for phrases passed to the sub
;============================================
sub scanJournal
;%0 - 2
;%1 - phrase to scan for
;%2 - #jindex to scan from
;%3 - time to scan for
namespace push
namespace local ScanJournal
for !timeout 1 %3
        {
        for !line %2 #jindex
                {
                scanjournal !line
                wait 1
                if %1 in #journal
                        {
                        namespace pop
                        return #true
                        }
                }
        wait 1s
        }
namespace pop
return #false
;=======================================


