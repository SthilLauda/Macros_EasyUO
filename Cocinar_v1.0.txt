; =====================================================================================================
; '||   ||` '||`   ||                                 /.\      '||`
;  ||   ||   ||    ||     ''                         // \\      ||   ''
;  ||   ||   ||  ''||''   ||  '||),,(|,   '''|.     //...\\     ||   ||   '''|.  `||''|,  '''/  '''|.
;  ||   ||   ||    ||     ||   || || ||  .|''||    //     \\    ||   ||  .|''||   ||  ||   //  .|''||
;  `|...|'  .||.   `|..' .||. .||    ||. `|..||. .//       \\. .||. .||. `|..||. .||  ||. /... `|..||.
; =====================================================================================================
; Script Name: Cocinar [ Panadero ]
;                            _          _
;                           (c)___c____(c)
;                            \ ........../
;                             |.........|
;                              |.......|
;                              |.......|
;                              |=======|
;                              |=======|
;                             __o)""""::?
;                            C__    c)::;
;                               >--   ::     /\
;                               (____/      /__\
;                               } /""|      |##|
;                    __/       (|V ^ )\     |##|
;                    o | _____/ |#/ / |     |##|
;           @        o_|}|_____/|/ /  |     |##|
;                          _____/ /   |     ~!!~
;              ======ooo}{|______)#   |     /`'\
;          ~~~~ ;    ;          ###---|8     ""
;        ____;_____;____        ###====     /:|\
;       (///0///@///@///)       ###@@@@|
;       |~~~~~~~~~~~~~~~|       ###@@@@|
;        \             /        ###@@@@|               +
;         \___________/         ###xxxxx      /\      //
;           H H   H  H          ###|| |      /  \    //
;           H H   H  H           | || |     /____\  /~_^_
;           H H   H  H           C |C |     _|@@|_ /__|#|_
;           H H   H  H            || ||    /_|@@|_/___|#|/|
; v    \/   H(o) (o) H            || ::   |:::::::::::::|#|
; ~    ~~  (o)      (o)        Ccc__)__)  |ROMAN CANDLES|#|
;  \|/      ~   @* & ~                    |:::::::::::::|/  \|/
;   ~           \|/        !!        \ !/  ~~~~~~~~~~~~~    ~~~
;               ~~~        ~~         ~~           ~~
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      `"""""""`
;
set %version v1.0
;
; Author: Sthil Lauda
; Version: 2.0
; Client Tested with: 2.0.3
; EUO version tested with: 1.5 Version 142
; Shard: Ultima Alianza (¡Hasta la muerte!)
; Fecha: 08/12/2018
; Purpose: Fabrica pan usando harina y jarras de agua.
; Instrucciones; Necesitas el libro de cocina "Simple", ramas para el fuego, harina, y agua.
;------------------------------------------------------

set %bolsa_harina JWAWKOD
set %bolsa_ramas JWAWKOD
set %bolsa_pan_fabricado UCLAEPD
set %bolsa_jarras CCWXZOD
set %tiempo_alimentacion 360 ; Cada cuántos segundos va a comprobar si tiene hambre.
;-------------------------------------------
set %harina PGG
set %pan RGG
set %jarras GZF
set %ramas PEF
set %comida RGG
set %tiempo_actual #SCNT
set %proxima_vez #SCNT

set #SYSMSGCOL 88
event sysmessage =============
set #SYSMSGCOL 53
event sysmessage Cocinar %version
set #SYSMSGCOL 88
event sysmessage =============
wait 20

gosub setupCookBook

loop_cocina:
gosub checkskill
gosub harina
gosub jarras
gosub ramas
gosub fabricar_pan
gosub checkhungry
gosub dejar_pan
goto loop_cocina

sub harina
_harina:
finditem %harina C_ , #BACKPACKID
if #FINDCNT = 0
   {
     finditem %harina C_ , %bolsa_harina
     if #FINDSTACK > 0
        {
          exevent drag #FINDID 1
          exevent dropc #BACKPACKID
          wait 20
          goto _harina
        }
        else
           {
             set #SYSMSGCOL 38
             event sysmessage NO QUEDA HARINA!
             halt
           }
   }
return

sub checkskill
chooseskill Cook real
if #SKILL >= 1000
   {
     set #SYSMSGCOL 73
     event sysmessage SOMOS GM COOKING! :-)
     halt
   }
return

sub checkhungry
set %tiempo_actual #SCNT
if %proxima_vez <= %tiempo_actual
   {
     gosub comprobar_comida
   }
return

sub jarras
_jarras:
finditem %jarras C_ , #BACKPACKID
if #FINDCNT < 2
   {
     set %repeticiones 2 - #FINDCNT
     _searchBag:
     finditem %jarras C_ , %bolsa_jarras
     if #FINDCNT > 0
        {
          if #FINDBAGID in %bolsa_jarras
             {
               set %ID_bolsa_jarras #FINDBAGID
               for %j 1 %repeticiones
                   {
                     finditem %jarras C_ , %ID_bolsa_jarras
                     if #FINDCNT > 0
                        {
                          exevent drag #FINDID #FINDSTACK
                          exevent dropc #BACKPACKID
                          wait 20
                        }
                        else
                           {
                             set #SYSMSGCOL 38
                             event sysmessage NO QUEDA AGUA!
                             halt
                           }
                   }
             }
             else
                {
                  ignoreitem #FINDBAGID bad_jarras
                  goto _searchBag
                }
         ignoreitem reset bad_jarras
        }
   }
return

sub ramas
_ramas:
finditem %ramas C_ , #BACKPACKID
if #FINDCNT = 0
   {
     finditem %ramas C_ , %bolsa_ramas
     if #FINDSTACK > 0
        {
          exevent drag #FINDID 1
          exevent dropc #BACKPACKID
          wait 20
          goto _ramas
        }
        else
           {
             set #SYSMSGCOL 38
             event sysmessage NO QUEDAN RAMAS!
             halt
           }
   }
return

sub fabricar_pan
finditem %libro_cocina C_ , #BACKPACKID
if #FINDCNT > 0
   {
     set #LOBJECTID %libro_cocina
     event macro 17
     gosub wait_for GUMP 595_360 40
     contpos 0 0
     click 294 69 f dmc
   }
   else
      {
        set #SYSMSGCOL 38
        event sysmessage NO HAY LIBRO DE COCINA :-(
        halt
      }
return

sub dejar_pan
_dejarpan:
finditem %pan C_ , #BACKPACKID
if #FINDCNT > 0
   {
     exevent drag #FINDID #FINDSTACK
     exevent dropc %bolsa_pan_fabricado
     wait 20
     goto _dejarpan
   }
return

sub setupCookBook
set #SYSMSGCOL 88
event sysmessage CLICK EN TU LIBRO DE COCINA
set #TARGCURS 1
while #TARGCURS = 1
      {
        wait 1
      }
set %libro_cocina #LTARGETID
set #SYSMSGCOL 73
event sysmessage OK Libro: %libro_cocina
wait 20
return

;=====================================================
; Rutina para, en caso de hambre, comer hasta saciarse
;=====================================================
; v2.2
sub comprobar_comida
{
  hambriento:
  set %jrnl #jindex ; Marcamos un índice de las líneas del diario.
  event macro 4 0 .hungry
  wait 20
  while #true
     {
       if #jindex > %jrnl ; Si aparece una nueva línea.
          {
            set %jrnl %jrnl + 1 ; Seleccionamos ese numero de línea.
            scanjournal %jrnl   ; La leemos...
            if Estas_no_le_afecta_el_hambre in #journal || Estas_tan_lleno_que_no_puedes in #journal || Estas_totalmente_saciado in #journal
               {
                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                 return
               }
               else
                  {
                    if Estas_lleno in #journal || Estas_contento in #journal || Estas_en_inanicion in #journal || Estas_hambriento in #journal || Sientes_mucho in #journal || Estas_con_hambre in #journal || Estas_parcialmente in #journal || Estas_bien_lleno in #journal || Te_sientes_casi_lleno in #journal
                       {
                         finditem %comida C_ , #BACKPACKID
                         if #findcnt > 0
                            {
                              set #LOBJECTID #FINDID
                              event macro 17
                              wait 20
                              goto hambriento
                            }
                            else
                               {
                                 event exmsg #CHARID 3 48 COMPRA COMIDA!!
                                 wait 40
                                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                               }
                       }
                       else ; Mensaje extraño, repetimos...
                          {
                            goto hambriento
                          }
                  }
          }
       return
     } ; FIN While
}
return

;=================================================================
sub wait_for
;=================================================================
; This "wait_for" sub package was created by Locke. If you use these subs please keep this header intact.
; Documentation: the sub package grew to large with all the comments. To load them call the sub like this:
; gosub wait_for docs    | or you can use doc, documention, what, or my personal favorite, kickass.

; "wait_for core dispatcher" version 1.2 by Locke
if %1 = doc || if %1 = docs || if %1 = documentation || if %1 = what || if %1 = kickass
{
Display ok Please click ok and wait for your browser to start.
execute http://www.easyuo.com/forum/viewtopic.php?t=24716
halt
}
nameSpace Push
namespace local LLNS
set #result N/A ; if #result isn't set by one of my wait_for subs it'll throw an error.
set !LPC #lpc
set #lpc 200
for %i 0 %0
set !_A . %i % . %i
gosub wait_for_ , !_A1
set #lpc !lpc
namespace clear LLNS
namespace pop
if #result <> N/A
return #result
else
display ok You specified an unknown wait_for command. Script returned #result and is halting.
halt
;=================================================================
sub wait_for_MSG ; version 1.4 ~Locke
;=================================================================
if !_A0 < 3
{
display ok You haven't specified enough vars.$
+The basic format is: gosub wait_for MSG %message time_out_in_seconds$
+Script is halting
halt
}
set !_timeout ( #scnt2 + !_A . !_A0 )
_lets_wait_for_a_message:
for %i %jstart #jindex
{
 scanjournal %i
  for %ii 2 !_A0
  {
    if !_A . %ii in #journal && %jstart <> %i
    set #result #true , #spc , !_A . %ii
  }
}

if #true notin #result
{
set #result #false
 if !_timeout =< #scnt2
 return #result
wait 1
goto _lets_wait_for_a_message
}
else
return #result

wait 1
goto _lets_wait_for_a_message

;======================================================================
sub wait_for_GUMP ; version 1.4 ~Locke
;=================================================================
; Añadido #CONTID ^^
if !_A0 < 3
{
display ok You haven't specified enough vars.$
+The basic format is: gosub wait_for GUMP XXX_YYY time_out_in_seconds$
+Script is halting
halt
}
if !_A3 <> CLOSE
set !_timeout #scnt2 + !_A3
else
set !_timeout 0 ; no gump wait if %3 = CLOSE since we already believe it to be open.

_lets_wait_for_a_gump:
if #CONTSIZE = !_A2 || #CONTKIND = !_A2 || #CONTNAME = !_A2 || #CONTTYPE = !_A2 || #CONTID = !_A2
{
 if !_A5 <> N/A && !_A6 <> N/A
 {
 set !clickx !_A5 + #contposx
 set !clicky !_A6 + #contposy
 click !clickx !clicky
 }
 if !_A3 = CLOSE || if !_A4 = CLOSE || !_A5 = CLOSE || !_A6 = CLOSE
 {
 set !string #contsize
 str pos !string _
 set !pos #strres
 str del !string #strres #strres
 set !clickX #contposx + ( #strres / 2 )
 str del !string 1 !pos
 set !clickY #contposy + ( #strres / 2 )
 click !clickx !clicky R
 }
return #true
}

if ( !_timeout =< #scnt2 ) && ( !_A4 = N/A )
   {
     return #false
   }

if !_A4 <> N/A && !_timeout =< #scnt2
{
finditem !_A4
if #findkind <> -1
{
 for #findindex 1 #findcnt
 {
  if #finddist > 2
  ignoreitem #findid LLWAITFOR
  else
  break
 }
 set #lobjectid #findid
 event macro 17 0
 set !_timeout #scnt2 + !_A3
}
else
return #false
}
wait 1
goto _lets_wait_for_a_gump

