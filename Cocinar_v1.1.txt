; =====================================================================================================
; '||   ||` '||`   ||                                 /.\      '||`
;  ||   ||   ||    ||     ''                         // \\      ||   ''
;  ||   ||   ||  ''||''   ||  '||),,(|,   '''|.     //...\\     ||   ||   '''|.  `||''|,  '''/  '''|.
;  ||   ||   ||    ||     ||   || || ||  .|''||    //     \\    ||   ||  .|''||   ||  ||   //  .|''||
;  `|...|'  .||.   `|..' .||. .||    ||. `|..||. .//       \\. .||. .||. `|..||. .||  ||. /... `|..||.
; =====================================================================================================
; Script Name: Cocinar
;                            _          _
;                           (c)___c____(c)
;                            \ ........../
;                             |.........|
;                              |.......|
;                              |.......|
;                              |=======|
;                              |=======|
;                             __o)""""::?
;                            C__    c)::;
;                               >--   ::     /\
;                               (____/      /__\
;                               } /""|      |##|
;                    __/       (|V ^ )\     |##|
;                    o | _____/ |#/ / |     |##|
;           @        o_|}|_____/|/ /  |     |##|
;                          _____/ /   |     ~!!~
;              ======ooo}{|______)#   |     /`'\
;          ~~~~ ;    ;          ###---|8     ""
;        ____;_____;____        ###====     /:|\
;       (///0///@///@///)       ###@@@@|
;       |~~~~~~~~~~~~~~~|       ###@@@@|
;        \             /        ###@@@@|               +
;         \___________/         ###xxxxx      /\      //
;           H H   H  H          ###|| |      /  \    //
;           H H   H  H           | || |     /____\  /~_^_
;           H H   H  H           C |C |     _|@@|_ /__|#|_
;           H H   H  H            || ||    /_|@@|_/___|#|/|
; v    \/   H(o) (o) H            || ::   |:::::::::::::|#|
; ~    ~~  (o)      (o)        Ccc__)__)  |ROMAN CANDLES|#|
;  \|/      ~   @* & ~                    |:::::::::::::|/  \|/
;   ~           \|/        !!        \ !/  ~~~~~~~~~~~~~    ~~~
;               ~~~        ~~         ~~           ~~
; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      `"""""""`
;
set %version v1.1
;
; Author: Sthil Lauda
; Version: 1.1
; Client Tested with: 2.0.3
; EUO version tested with: 1.5 Version 142
; Shard: Ultima Alianza (¡Hasta la muerte!)
; Fecha: 07/12/2019
; Purpose: Cocina pescado y carne para subir la skill de cocinar.
; Instrucciones; Necesitas filetes de pescado o filetes de carne cruda,
;                troncos o ramas para encender el horno, herramientas de cocinar, y el horno.
;------------------------------------------------------
;________________________________
;
; ///////////////////////////////
; ******** CONFIGURACIÓN ********
; ///////////////////////////////
;________________________________
;
set %stack_alimentos 50          ; Montón de alimentos a procesar en la mochila.
set %stack_combustible 50        ; Montón de troncos o ramas en la mochilaa.
set %tiempo_alimentacion 360     ; cada cuantos segundos comprobar el hambre.
;________________________________________________
;
; //////////////////////////////////////////////
; ************* FIN CONFIGURACIÓN *************
; //////////////////////////////////////////////
;________________________________________________
;
set %horno BPB                   ; Tipo de Horno.
set %combustible ZLK_PEF         ; Troncos y ramas.
set %alimentos_crudos IND_VRD    ; Filetes de pescado crudo (IND), Filetes de carne cruda (VRD).
set %alimentos_cocinados HND_YRD ; Filetes de pescado asado (HND), Filetes de carne asada (YRD).
set %herramientas IRD_GRD_HRD_CRD_FRD_BRD  ; Herramientas de Cocina.
set %comida RGG_NRD_QSD_ZBG_WLI_QRD_END_FUD_YLI_WLI_HGI
 +_KGI_EGI_QLI_KLI_MLI_KRD_HQD_AQD_MQE_VQE_TQE_JQE_IQE
 +_GQE_SPE_ZPE_OQE_BDF_KPE_RQE_YSD_SQD_YWI_AXI_PQD_QQD
 +_HND_YRD_
set %tiempo_actual #SCNT
set %proxima_vez #SCNT

set #SYSMSGCOL 88
event sysmessage =============
set #SYSMSGCOL 53
event sysmessage Cocinar %version
set #SYSMSGCOL 88
event sysmessage =============
wait 20

gosub setupHorno
gosub setupCofre

loop:
gosub checkskill
gosub checkHungry
finditem %ID_horno G_3
if #FINDCNT > 0
   {
     finditem %combustible C_ , #BACKPACKID
     if #FINDCNT > 0
        {
          set %ID_combustible #FINDID
          finditem %herramientas C_ , #BACKPACKID
          if #FINDCNT > 0
             {
               set %ID_herramientas #FINDID
               finditem %alimentos_crudos C_ , #BACKPACKID
               if #FINDCNT > 0
                  {
                    set %ID_alimentos_crudos #FINDID
                    ; Encender el Horno.
                    set #LOBJECTID %ID_horno
                    event macro 17
                    target
                    set #LTARGETID %ID_combustible
                    set #LTARGETKIND 1
                    event macro 22
                    ; Seleccionar la Herramienta de Cocina.
                    set #LOBJECTID %ID_horno
                    event macro 17
                    target
                    set #LTARGETID %ID_herramientas
                    set #LTARGETKIND 1
                    event macro 22
                    ; Usar el Horno con los alimentos.
                    set #LOBJECTID %ID_horno
                    event macro 17
                    target
                    set #LTARGETID %ID_alimentos_crudos
                    set #LTARGETKIND 1
                    event macro 22
                    set %jstart #jindex ; Esperamos a que el horno esté disponible de nuevo.
                    gosub wait_for MSG El_horno_se_apaga 400
                    ; Descagar los alimentos cocinados si hay muchos o vamos pasados de peso...
                    finditem %alimentos_cocinados C_ , #BACKPACKID
                    if #FINDSTACK > 50 || #WEIGHT >= #MAXWEIGHT - 50
                       {
                         if #FINDCNT > 0
                            {
                              exevent drag #FINDID #FINDSTACK
                              exevent dropC %ID_cofre
                              wait 30
                            }
                       }
                  }
                  else ; Reponemos alimentos...
                     {
                       finditem %alimentos_crudos C_ , %ID_cofre
                       if #FINDCNT > 0
                          {
                            if #FINDSTACK >= %stack_alimentos
                               {
                                 exevent drag #FINDID %stack_alimentos
                                 exevent dropC #BACKPACKID
                                 wait 30
                               }
                               else ; Cojemos los que quedan...
                                  {
                                    exevent drag #FINDID #FINDSTACK
                                    exevent dropC #BACKPACKID
                                    wait 30
                                  }
                          }
                          else
                             {
                               set #SYSMSGCOL 38
                               event sysmessage NO HAY ALIMENTOS! :-(
                               halt
                             }
                     }
             }
             else ; Reponemos herramientas...
                {
                  finditem %herramientas C_ , %ID_cofre
                  if #FINDCNT > 0
                     {
                       exevent drag #FINDID
                       exevent dropC #BACKPACKID
                       wait 30
                     }
                     else
                        {
                          set #SYSMSGCOL 38
                          event sysmessage NO HAY HERRAMIENTAS! :-(
                          halt
                        }
                }
        }
        else ; Reponemos combustible...
           {
             finditem %combustible C_ , %ID_cofre
             if #FINDCNT > 0
                {
                  if #FINDSTACK >= %stack_combustible
                     {
                       exevent drag #FINDID %stack_combustible
                       exevent dropC #BACKPACKID
                       wait 30
                     }
                     else ; Cojemos los que quedan...
                        {
                          exevent drag #FINDID #FINDSTACK
                          exevent dropC #BACKPACKID
                          wait 30
                        }
                }
                else
                   {
                     set #SYSMSGCOL 38
                     event sysmessage NO HAY COMBUSTIBLE! :-(
                     halt
                   }
           }
   }
   else
      {
        set #SYSMSGCOL 43
        event sysmessage ¡ESTAS LEJOS DEL HORNO!
        wait 20
      }
goto loop

sub setupHorno ;<====================>
_setupHorno:
set #TARGCURS 1
set #SYSMSGCOL 73
event sysmessage SELECCIONA EL HORNO!
while #TARGCURS = 1
      {
        wait 1
      }
set %ID_horno #LTARGETID
finditem %ID_horno
if #FINDTYPE NotIn %horno
   {
     set #SYSMSGCOL 53
     event sysmessage ESO NO PARECE UN HORNO! ¬¬
     goto _setupHorno
   }
   else
      {
        set #SYSMSGCOL 88
        event sysmessage [ OK ] ID HORNO: %ID_horno
        wait 40
      }
return

sub setupCofre ;<====================>
_setupCofre:
set #TARGCURS 1
set #SYSMSGCOL 73
event sysmessage SELECCIONA EL COFRE!
while #TARGCURS = 1
      {
        wait 1
      }
set %ID_cofre #LTARGETID
set #SYSMSGCOL 88
event sysmessage [ OK ] ID COFRE: %ID_cofre
wait 40
set #LOBJECTID %ID_cofre
event macro 17
gosub wait_for GUMP %ID_cofre 40
return

sub checkskill ;<====================>
chooseskill Cook real
if #SKILL >= 1000
   {
     set #SYSMSGCOL 73
     event sysmessage SOMOS GM COOKING! :-)
     halt
   }
return

sub checkHungry ;<====================>
set %tiempo_actual #SCNT
if %proxima_vez <= %tiempo_actual
   {
     gosub comprobar_comida
   }
return

;=====================================================
; Rutina para, en caso de hambre, comer hasta saciarse
;=====================================================
; v2.2
sub comprobar_comida ;<==============================>
{
  hambriento:
  set %jrnl #jindex ; Marcamos un índice de las líneas del diario.
  event macro 4 0 .hungry
  wait 20
  while #true
     {
       if #jindex > %jrnl ; Si aparece una nueva línea.
          {
            set %jrnl %jrnl + 1  ; Seleccionamos ese numero de línea.
            scanjournal %jrnl   ; La leemos...
            if Estas_no_le_afecta_el_hambre in #journal || Estas_tan_lleno_que_no_puedes in #journal || Estas_totalmente_saciado in #journal
               {
                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                 return
               }
               else
                  {
                    if Estas_lleno in #journal || Estas_contento in #journal || Estas_en_inanicion in #journal || Estas_hambriento in #journal || Sientes_mucho in #journal || Estas_con_hambre in #journal || Estas_parcialmente in #journal || Estas_bien_lleno in #journal || Te_sientes_casi_lleno in #journal
                       {
                         finditem %comida C_ , #backpackid
                         if #findcnt > 0
                            {
                              set #lobjectid #findid
                              event macro 17
                              wait 20
                              goto hambriento
                            }
                            else
                               {
                                 event exmsg #charid 3 48 COMPRA COMIDA!!
                                 wait 40
                                 set %proxima_vez %tiempo_actual + %tiempo_alimentacion
                               }
                       }
                       else ; Mensaje extraño, repetimos...
                          {
                            goto hambriento
                          }
                  }
          }
       return
     } ; FIN While
}
return

;=================================================================
sub wait_for
;=================================================================
; This "wait_for" sub package was created by Locke. If you use these subs please keep this header intact.
; Documentation: the sub package grew to large with all the comments. To load them call the sub like this:
; gosub wait_for docs    | or you can use doc, documention, what, or my personal favorite, kickass.

; "wait_for core dispatcher" version 1.2 by Locke
if %1 = doc || if %1 = docs || if %1 = documentation || if %1 = what || if %1 = kickass
{
Display ok Please click ok and wait for your browser to start.
execute http://www.easyuo.com/forum/viewtopic.php?t=24716
halt
}
nameSpace Push
namespace local LLNS
set #result N/A ; if #result isn't set by one of my wait_for subs it'll throw an error.
set !LPC #lpc
set #lpc 200
for %i 0 %0
set !_A . %i % . %i
gosub wait_for_ , !_A1
set #lpc !lpc
namespace clear LLNS
namespace pop
if #result <> N/A
return #result
else
display ok You specified an unknown wait_for command. Script returned #result and is halting.
halt
;======================================================================
sub wait_for_GUMP ; version 1.4 ~Locke
;=================================================================
; Añadido #CONTID ^^
if !_A0 < 3
{
display ok You haven't specified enough vars.$
+The basic format is: gosub wait_for GUMP XXX_YYY time_out_in_seconds$
+Script is halting
halt
}
if !_A3 <> CLOSE
set !_timeout #scnt2 + !_A3
else
set !_timeout 0 ; no gump wait if %3 = CLOSE since we already believe it to be open.

_lets_wait_for_a_gump:
if #CONTSIZE = !_A2 || #CONTKIND = !_A2 || #CONTNAME = !_A2 || #CONTTYPE = !_A2 || #CONTID = !_A2
{
 if !_A5 <> N/A && !_A6 <> N/A
 {
 set !clickx !_A5 + #contposx
 set !clicky !_A6 + #contposy
 click !clickx !clicky
 }
 if !_A3 = CLOSE || if !_A4 = CLOSE || !_A5 = CLOSE || !_A6 = CLOSE
 {
 set !string #contsize
 str pos !string _
 set !pos #strres
 str del !string #strres #strres
 set !clickX #contposx + ( #strres / 2 )
 str del !string 1 !pos
 set !clickY #contposy + ( #strres / 2 )
 click !clickx !clicky R
 }
return #true
}

if ( !_timeout =< #scnt2 ) && ( !_A4 = N/A )
   {
     return #false
   }

if !_A4 <> N/A && !_timeout =< #scnt2
{
finditem !_A4
if #findkind <> -1
{
 for #findindex 1 #findcnt
 {
  if #finddist > 2
  ignoreitem #findid LLWAITFOR
  else
  break
 }
 set #lobjectid #findid
 event macro 17 0
 set !_timeout #scnt2 + !_A3
}
else
return #false
}
wait 1
goto _lets_wait_for_a_gump
;=================================================================
sub wait_for_MSG ; version 1.4 ~Locke
;=================================================================
if !_A0 < 3
{
display ok You haven't specified enough vars.$
+The basic format is: gosub wait_for MSG %message time_out_in_seconds$
+Script is halting
halt
}
set !_timeout ( #scnt2 + !_A . !_A0 )
_lets_wait_for_a_message:
for %i %jstart #jindex
{
 scanjournal %i
  for %ii 2 !_A0
  {
    if !_A . %ii in #journal && %jstart <> %i
    set #result #true , #spc , !_A . %ii
  }
}

if #true notin #result
{
set #result #false
 if !_timeout =< #scnt2
 return #result
wait 1
goto _lets_wait_for_a_message
}
else
return #result

wait 1
goto _lets_wait_for_a_message
