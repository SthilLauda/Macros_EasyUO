; ======================================================================================================
;  '||   ||` '||`   ||                                 /.\      '||`
;   ||   ||   ||    ||     ''                         // \\      ||   ''
;   ||   ||   ||  ''||''   ||  '||),,(|,   '''|.     //...\\     ||   ||   '''|.  `||''|,  '''/  '''|.
;   ||   ||   ||    ||     ||   || || ||  .|''||    //     \\    ||   ||  .|''||   ||  ||   //  .|''||
;   `|...|'  .||.   `|..' .||. .||    ||. `|..||. .//       \\. .||. .||. `|..||. .||  ||. /... `|..||.
; ======================================================================================================
;
; Script Name: Entrenar Warrior [ Presencia ]
;
; |\              //
;  \\           _!_
;   \\         /___\
;    \\        [+++]
;     \\    _ _\^^^/_ _
;      \\/ (    '-'  ( )
;      /( \/ | {&}   /\ \
;        \  / \     / _> )
;         "`   >:::;-'`""'-.
;             /:::/         \
;            /  /||   {&}   |
;           (  / (\         /
;           / /   \'-.___.-'
;     jgs _/ /     \ \
;        /___|    /___|
;
; Author: Sthil
; Version: 1.1
; Client Tested with: 2.0.3
; EUO version tested with: EasyUO 1.5 Version 243
; Shard: Ultima Alianza (¡Hasta la muerte!)
; Revision Date: 040710
; Public Release:  040710
; Purpose: Subir skill de tactics, sword, etc, peleando contra presencias incorpóreas.
set %version v1.1
;________________________________
;
; ///////////////////////////////
; ******** CONFIGURACIÓN ********
; ///////////////////////////////
;________________________________
;
set %tiempo_attack 3 ; En segundos, cada cuanto ordenar el ataque.
set %tiempo_comer 360 ; Cada cuántos segundos va a comprobar si tiene hambre.
;________________________________________________
;
; //////////////////////////////////////////////
; ************* FIN CONFIGURACIÓN *************
; //////////////////////////////////////////////
;________________________________________________
;
set %presencia IJB
set %tipos_armas FMH_GFF_EPH_LPH_BPH_CUO_TSF_LPO_JPH_ZTH_RMH_SOH_TLH_
 +FUO_WSF_ATF_OMH_XPO_NMH_BNF_LTF_VPO_WTH_VRH_KTF_
 +OLH_FFF_ZSF_YTH_BUO_ASF_ISF_BSF_QPF_KPH_CUH_NPO_MPH_UOH_TRH_XRH_CSF_
 +KPO_POH_RRH_WPO_EMH_MSF_OPO_BUH_GUO_VTH_BFF_QMH_YSF_NSF_LSF_
 +GMH_JTF_SRH_CNF_FBG_HNF_ZPF_GBG_OSF_INF_HSF_AUO_ZTO_FSF_WRH_MTF_JPO_
 +RPF_HFF_XSF_YPO_DMH_XTH_QOH_URH_CQF_CFF_PMH_AUH_SPO_CPH_AQF_
 +MPO_YRH_JOH_KSF_ZRF_PPF_SMH_NPO_GUO_XHF
set %comida RGG_NRD_QSD_ZBG_WLI_QRD_END_FUD_YLI_WLI_HGI
 +_KGI_EGI_QLI_KLI_MLI_KRD_HQD_AQD_MQE_VQE_TQE_JQE_IQE
 +_GQE_SPE_ZPE_OQE_BDF_KPE_RQE_YSD_SQD_YWI_AXI_PQD_QQD
set %tiempo_actual #SCNT
set %proxima_vez #SCNT
set %proxima_vez_attack #SCNT

set #SYSMSGCOL 88
event sysmessage ======================
event sysmessage Entrenar Warrior %version
event sysmessage ======================
set #sysmsgcol 73
wait 2s

;========================================================
;
; ******************* LOOP PRINCIPAL *******************
;
;========================================================
loop:
set %tiempo_actual #SCNT ; Actualiza el reloj.
if %proxima_vez <= %tiempo_actual ; Triger de alimentación.
   {
     gosub comprobar_comida
   }
finditem %presencia G_2
if #findkind = -1 ; Esperar a una nueva presencia
   {
     wait 20
     goto loop
   }
gosub comprobar_arma ; En caso de romperse
if %proxima_vez_attack <= %tiempo_actual ; Triger de ataque
  {
    gosub atacar
  }
goto loop
;========================================================
;
; ***************** FIN LOOP PRINCIPAL *****************
;
;========================================================

;=====================================================
; Rutina para buscar y atacar una presencia incorpórea
;=====================================================
sub atacar
finditem %presencia G_2
if #findkind <> -1
   {
     set #LTARGETID #FINDID
     event macro 27 ; Attack Last
     wait 20
     set %proxima_vez_attack %tiempo_actual + %tiempo_attack
   }
return

;=====================================================
; Rutina para, en caso de romperse el arma, reponer
;=====================================================
sub comprobar_arma
finditem %tipos_armas C_ , #CHARID
if #FINDKIND = -1 ; Si no está en el pj, entonces se ha roto...
   {
     finditem %tipos_armas C_ , #BACKPACKID ; Buscamos una en la mochila, y la equipamos...
     if #FINDKIND <> -1
        {
          set #LOBJECTID #FINDID
          event macro 17 0
          wait 20
        }
   }
return

;=====================================================
; Rutina para, en caso de hambre, comer hasta saciarse
;=====================================================
sub comprobar_comida ;<=========================>
{
  hambriento:
  set %jrnl #jindex
  msg .hungry $
  wait 20
  while #true
     {
       if #jindex > %jrnl
          {
            set %jrnl %jrnl + 1
            scanjournal %jrnl
            if Estas_tan_lleno_que_no_puedes in #journal || Estas_totalmente_saciado in #journal
               {
                 set %proxima_vez %tiempo_actual + %tiempo_comer
                 return
               }
               else
                  {
                    if Estas_lleno in #journal || Estas_contento in #journal || Estas_en_inanicion in #journal || Estas_hambriento in #journal || Sientes_mucho in #journal || Estas_con_hambre in #journal || Estas_parcialmente in #journal || Estas_bien_lleno in #journal || Te_sientes_casi_lleno in #journal
                       {
                         event exmsg #charid 3 111 Comiendo...
                         finditem %comida C_ , #backpackid
                         set #lobjectid #findid
                         event macro 17
                         wait 20
                         goto hambriento
                       }
                       else ; Mensaje extraño, repetimos...
                          {
                            goto hambriento
                          }
                  }
          }
       return
     } ; FIN While
}
return
